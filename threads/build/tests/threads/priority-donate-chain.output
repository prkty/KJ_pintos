Kernel command line: -q run priority-donate-chain
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  32,716,800 loops/s.
Boot complete.
Executing 'priority-donate-chain':
(priority-donate-chain) begin
(priority-donate-chain) main got lock.
(priority-donate-chain) main should have priority 3.  Actual priority: 0.
(priority-donate-chain) main should have priority 6.  Actual priority: 0.
(priority-donate-chain) main should have priority 9.  Actual priority: 0.
(priority-donate-chain) main should have priority 12.  Actual priority: 0.
(priority-donate-chain) main should have priority 15.  Actual priority: 0.
(priority-donate-chain) main should have priority 18.  Actual priority: 0.
(priority-donate-chain) main should have priority 21.  Actual priority: 0.
(priority-donate-chain) main finishing with priority 0.
(priority-donate-chainInterrupt 0x0e (#PF Page-Fault Exception) at rip=8004234002
 cr2=0000000004234003 error=               0
rax 0000000004234003 rbx 0000000000204400 rcx 0000008004000e5c rdx 0000000000000029
rsp 0000008004000dc8 rbp 0000008004000e30 rsi 0000008004000e5c rdi 0000000000000029
rip 0000008004234002 r8 0000008004000e5c  r9 0000008004216594 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00200206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../threads/interrupt.c:361 in intr_handler(): Unexpected interrupt
Call stack: 0x80042132ac 0x8004208767 0x8004208b19 0x8004216480 0x80042107af 0x80042167a7 0x8004216703 0x8004206636 0x8004206783 0x8004206120.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 46 ticks
Thread: 0 idle ticks, 46 kernel ticks, 0 user ticks
Console: 1